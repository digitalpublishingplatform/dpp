@using DigitalPublishingPlatform.Helpers
@using DigitalPublishingPlatform.Models
@model DigitalPublishingPlatform.ViewModels.ArticleItemListViewModel          
@{ Layout.Title = T("Articles").ToString(); }

@using(Html.BeginFormAntiForgeryPost()) {
    <fieldset>
        <div class="breadCrumbs">
            <p>
                @foreach (Navigation navigation in BreadCrumbs.GetNavigationHierarchy(Request.Url.PathAndQuery, WorkContext))
                {
                    if(!navigation.Path.IsNullOrEmpty()) {
                        @Html.Link(navigation.Name, navigation.Path) <text>&#62;</text>    
                    }
                    else {
                        @Html.Label(navigation.Name) <text>&#62;</text>    
                    }
                }
                @T("Articles")
            </p>
        </div>

        <label for="find">
            Find Article:                
        </label>
        <div style="width: 70%; float: left;">                
            <input type="text" class="large text" name="find" id="find"/>
        </div>
        <div style="float: left;">
            <button class="primaryAction" type="submit">Find</button>
        </div>
        <div class="manage">@Html.ActionLink(T("Add new article").ToString(), "Create", new { issueId = Model.IssueId }, new { @class = "button primaryAction" })</div>
        <br/>
        <br/>
        <br/>
        @if (Model.ArticleItems.Any()) {
            <table class="items">
                <thead>
                    <tr>                
                        <th class="title-list-small">@T("Title")</th>   
                        <th>@T("Created")</th>
                        <th>@T("Modified")</th>
                        <th>@T("Author")</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var articleItem in Model.ArticleItems)
                    {
                        <tr>                   
                            <td>
                                @Html.ActionLink(@articleItem.Title, "Edit", new {id = articleItem.Id})
                        
                            </td>
                            <td>
                                @articleItem.CreatedUtc
                            </td>
                            <td>
                                @articleItem.ModifiedUtc
                            </td>
                            <td>
                                @articleItem.Author
                            </td>                             
                            <td>
                                @Html.ActionLink("Edit", "Edit", new {id = articleItem.Id}) | 
                                @Html.ActionLink(T("Delete").ToString(), "Delete", new {id = articleItem.Id})
                                @if (articleItem.Published)
                                {       
                                    <p>
                                        <img class="icon" src="/Modules/Orchard.PublishLater/Content/Admin/images/online.gif" alt="Online" title="The page is currently online" /> Published | 
                                        @Html.ActionLink("Unpublish", "Unpublish", "Admin", new {id = articleItem.Id, returnUrl = this.ReturnUrl()}, null)
                                    </p>    
                                }else{
                                    <p>
                                        <img class="icon" src="/Modules/Orchard.PublishLater/Content/Admin/images/offline.gif" alt="Online" title="The page is currently online" /> Not Published | 
                                        @Html.ActionLink("Publish", "Publish", "Admin", new {id = articleItem.Id, returnUrl = this.ReturnUrl()}, null)
                                    </p>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="info message">@T("No articles found.")</div>    
        }
    </fieldset>
}
 @Display(Model.Pager)